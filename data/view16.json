{"views": {"organisms1": {"map": "function(doc) { var regexp = new RegExp(\"^[ACGT]{3}AA[ACGT]{18}$\"); if (regexp.test(doc[\"_id\"])){ for (var org in doc) { if (org.charAt(0) != \"_\") { var nb_occurences = 0; for (var seq_ref in doc[org]){ nb_occurences = nb_occurences + doc[org][seq_ref].length } emit(org, nb_occurences)}}}}"}, "organisms2": {"map": "function(doc) { var regexp = new RegExp(\"^[ACGT]{3}AC[ACGT]{18}$\"); if (regexp.test(doc[\"_id\"])){ for (var org in doc) { if (org.charAt(0) != \"_\") { var nb_occurences = 0; for (var seq_ref in doc[org]){ nb_occurences = nb_occurences + doc[org][seq_ref].length } emit(org, nb_occurences)}}}}"}, "organisms3": {"map": "function(doc) { var regexp = new RegExp(\"^[ACGT]{3}AG[ACGT]{18}$\"); if (regexp.test(doc[\"_id\"])){ for (var org in doc) { if (org.charAt(0) != \"_\") { var nb_occurences = 0; for (var seq_ref in doc[org]){ nb_occurences = nb_occurences + doc[org][seq_ref].length } emit(org, nb_occurences)}}}}"}, "organisms4": {"map": "function(doc) { var regexp = new RegExp(\"^[ACGT]{3}AT[ACGT]{18}$\"); if (regexp.test(doc[\"_id\"])){ for (var org in doc) { if (org.charAt(0) != \"_\") { var nb_occurences = 0; for (var seq_ref in doc[org]){ nb_occurences = nb_occurences + doc[org][seq_ref].length } emit(org, nb_occurences)}}}}"}, "organisms5": {"map": "function(doc) { var regexp = new RegExp(\"^[ACGT]{3}CA[ACGT]{18}$\"); if (regexp.test(doc[\"_id\"])){ for (var org in doc) { if (org.charAt(0) != \"_\") { var nb_occurences = 0; for (var seq_ref in doc[org]){ nb_occurences = nb_occurences + doc[org][seq_ref].length } emit(org, nb_occurences)}}}}"}, "organisms6": {"map": "function(doc) { var regexp = new RegExp(\"^[ACGT]{3}CC[ACGT]{18}$\"); if (regexp.test(doc[\"_id\"])){ for (var org in doc) { if (org.charAt(0) != \"_\") { var nb_occurences = 0; for (var seq_ref in doc[org]){ nb_occurences = nb_occurences + doc[org][seq_ref].length } emit(org, nb_occurences)}}}}"}, "organisms7": {"map": "function(doc) { var regexp = new RegExp(\"^[ACGT]{3}CG[ACGT]{18}$\"); if (regexp.test(doc[\"_id\"])){ for (var org in doc) { if (org.charAt(0) != \"_\") { var nb_occurences = 0; for (var seq_ref in doc[org]){ nb_occurences = nb_occurences + doc[org][seq_ref].length } emit(org, nb_occurences)}}}}"}, "organisms8": {"map": "function(doc) { var regexp = new RegExp(\"^[ACGT]{3}CT[ACGT]{18}$\"); if (regexp.test(doc[\"_id\"])){ for (var org in doc) { if (org.charAt(0) != \"_\") { var nb_occurences = 0; for (var seq_ref in doc[org]){ nb_occurences = nb_occurences + doc[org][seq_ref].length } emit(org, nb_occurences)}}}}"}, "organisms9": {"map": "function(doc) { var regexp = new RegExp(\"^[ACGT]{3}GA[ACGT]{18}$\"); if (regexp.test(doc[\"_id\"])){ for (var org in doc) { if (org.charAt(0) != \"_\") { var nb_occurences = 0; for (var seq_ref in doc[org]){ nb_occurences = nb_occurences + doc[org][seq_ref].length } emit(org, nb_occurences)}}}}"}, "organisms10": {"map": "function(doc) { var regexp = new RegExp(\"^[ACGT]{3}GC[ACGT]{18}$\"); if (regexp.test(doc[\"_id\"])){ for (var org in doc) { if (org.charAt(0) != \"_\") { var nb_occurences = 0; for (var seq_ref in doc[org]){ nb_occurences = nb_occurences + doc[org][seq_ref].length } emit(org, nb_occurences)}}}}"}, "organisms11": {"map": "function(doc) { var regexp = new RegExp(\"^[ACGT]{3}GG[ACGT]{18}$\"); if (regexp.test(doc[\"_id\"])){ for (var org in doc) { if (org.charAt(0) != \"_\") { var nb_occurences = 0; for (var seq_ref in doc[org]){ nb_occurences = nb_occurences + doc[org][seq_ref].length } emit(org, nb_occurences)}}}}"}, "organisms12": {"map": "function(doc) { var regexp = new RegExp(\"^[ACGT]{3}GT[ACGT]{18}$\"); if (regexp.test(doc[\"_id\"])){ for (var org in doc) { if (org.charAt(0) != \"_\") { var nb_occurences = 0; for (var seq_ref in doc[org]){ nb_occurences = nb_occurences + doc[org][seq_ref].length } emit(org, nb_occurences)}}}}"}, "organisms13": {"map": "function(doc) { var regexp = new RegExp(\"^[ACGT]{3}TA[ACGT]{18}$\"); if (regexp.test(doc[\"_id\"])){ for (var org in doc) { if (org.charAt(0) != \"_\") { var nb_occurences = 0; for (var seq_ref in doc[org]){ nb_occurences = nb_occurences + doc[org][seq_ref].length } emit(org, nb_occurences)}}}}"}, "organisms14": {"map": "function(doc) { var regexp = new RegExp(\"^[ACGT]{3}TC[ACGT]{18}$\"); if (regexp.test(doc[\"_id\"])){ for (var org in doc) { if (org.charAt(0) != \"_\") { var nb_occurences = 0; for (var seq_ref in doc[org]){ nb_occurences = nb_occurences + doc[org][seq_ref].length } emit(org, nb_occurences)}}}}"}, "organisms15": {"map": "function(doc) { var regexp = new RegExp(\"^[ACGT]{3}TG[ACGT]{18}$\"); if (regexp.test(doc[\"_id\"])){ for (var org in doc) { if (org.charAt(0) != \"_\") { var nb_occurences = 0; for (var seq_ref in doc[org]){ nb_occurences = nb_occurences + doc[org][seq_ref].length } emit(org, nb_occurences)}}}}"}, "organisms16": {"map": "function(doc) { var regexp = new RegExp(\"^[ACGT]{3}TT[ACGT]{18}$\"); if (regexp.test(doc[\"_id\"])){ for (var org in doc) { if (org.charAt(0) != \"_\") { var nb_occurences = 0; for (var seq_ref in doc[org]){ nb_occurences = nb_occurences + doc[org][seq_ref].length } emit(org, nb_occurences)}}}}"}}}